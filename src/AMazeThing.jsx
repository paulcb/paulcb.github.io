import { useEffect, useState } from 'react';

const AMazeThing = () => {
    const [links, setLinks] = useState("");
    useEffect(() => {
        if (!links) {

            const appLink = import.meta.env.VITE_APP_LINK;
            const codeLink = import.meta.env.VITE_CODE_LINK;
            const linksFromEnv = { appLink: appLink, codeLink: codeLink };
            //unecessary link ascii encoding/decoding for run...
            // const val1Arry = new Uint8Array(val1.split(',').map(x => Number(x)));
            // const decodedVal1 = new TextDecoder().decode(val1Arry);
            setLinks(linksFromEnv);
            console.log(appLink, codeLink)
        }
    }, [links]);
    return (
        <>
            <div className="card">
                <div className="cardDate">3/3/2025</div>
                <div style={{ display: 'inline' }}>
                    <a className="carda" href={links.appLink}>
                        aMazeThing
                    </a>
                    &nbsp;--&nbsp;
                    <a className="carda" href={links.codeLink}>
                        code
                    </a>
                </div>
                <p>
                    aMazeThing is a React Typescript AWS CloudFront powered website that give users endless mazes to solve over and over again!
                    <br /><br />
                    Users may select from replayable daily mazes that are generated by a AWS CDK Stack utilizing: Lambda, S3 Bucket, and EventBridge Scheduler.
                    <br /><br />
                    A daily maze is generated using an EventBridge Schedule Rule that triggers a Lambda function every 24 hours that writes to a S3 Bucket. The CloudFront site then reads mazes from the last ten days for users to select. Or a user may use the embedded TypeScript maze generator as many times as they want.
                    <br /><br />
                    Using AWS CodePipeline and Github, a seperate development evironment is used for creating feature changes before updating production instances providing CI/CD.
                    A special case is handled for preserving the production S3 Bucket incase of production redeploy.

                </p>
            </div>
        </>
    );
};

export default AMazeThing;
